{"version":3,"sources":["components/Item.js","components/Items.js","components/CartItems.js","components/AddNewItem.js","App.js","reportWebVitals.js","index.js"],"names":["Item","product","onAdd","className","title","price","onClick","Items","products","countCartProducts","map","id","CartItems","cartProducts","onRemove","clearCartItems","totalPrice","reduce","totalSum","quantity","length","alert","AddNewItem","addProduct","useState","setTitle","setPrice","onSubmit","e","preventDefault","type","value","onChange","target","parseInt","App","setProducts","setCartProducts","showAddProduct","setShowAddProduct","exist","find","x","newProduct","filter","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.54e5a5f7.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Item = ({ product, onAdd }) => {\r\n    return (\r\n        <div className=\"product\">\r\n            <p>{product.title}</p>\r\n            <p>${product.price}</p>\r\n            <button className=\"add_cart_btn\" onClick={() => onAdd(product)}>BUY</button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Item\r\n","import React from 'react'\r\nimport Item from './Item'\r\n\r\nconst Items = ({ products, onAdd, countCartProducts }) => {\r\n\r\n    return (\r\n        <div>\r\n            <header>\r\n                <h1>Products </h1>\r\n                <p>Cart {''}\r\n                    {countCartProducts ? (\r\n                        <button className=\"badge\">{countCartProducts}</button>\r\n                    ) : (\r\n                        ''\r\n                    )}\r\n                </p>\r\n            </header>\r\n\r\n            <div>\r\n                {products.map(product => (\r\n                    <Item\r\n                        key={product.id}\r\n                        product={product}\r\n                        onAdd={onAdd}\r\n                    />\r\n                ))}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Items\r\n","import React from 'react'\r\n\r\nconst CartItems = ({ cartProducts, onAdd, onRemove, clearCartItems }) => {\r\n\r\n    const totalPrice = cartProducts.reduce((totalSum, product) => totalSum + product.price * product.quantity, 0)\r\n\r\n    const purchasedBtn = () => {\r\n        if (cartProducts.length === 0) {\r\n            alert('Please add a product.')\r\n        } else {\r\n            alert('Thank you for your purchased.')\r\n            clearCartItems()\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"cart_products_container\">\r\n            <h2>Cart items</h2>\r\n\r\n            {cartProducts.length === 0 && (<div><p>Cart is empty</p></div>)}\r\n\r\n            {cartProducts.map(product => (\r\n                <div className=\"cart_products\" key={product.id}>\r\n                    <p>{product.title}</p>\r\n                    <p>{product.quantity} <span>* ${product.price}</span></p>\r\n                    <div className=\"plus_min_btn\">\r\n                        <button onClick={() => onAdd(product)}>+</button>\r\n                        <button onClick={() => onRemove(product)}>-</button>\r\n                    </div>\r\n                    <br />\r\n                    <br />\r\n                    <br />\r\n                </div>\r\n            ))}\r\n\r\n            {cartProducts !== 0 && (\r\n                <div>\r\n                    <p>Total Price: <span>${totalPrice}</span></p>\r\n                    <button className=\"purchasedBtn\" onClick={purchasedBtn}>Purchased</button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CartItems\r\n","import React from 'react'\r\nimport { useState } from 'react'\r\n\r\nconst AddNewItem = ({ addProduct }) => {\r\n\r\n    // Saving the default value of the two input to ''.\r\n\r\n    const [title, setTitle] = useState('')\r\n\r\n    const [price, setPrice] = useState('')\r\n\r\n    // this function will call the addItem() and give two arguments.\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n\r\n        if (!title) {\r\n            alert('Please provide a title.')\r\n            return\r\n        }\r\n        addProduct({ title, price })\r\n\r\n        setTitle('')\r\n        setPrice('')\r\n    }\r\n\r\n    // When we change the value of the two inputs.\r\n\r\n    const titleInput = (e) => {\r\n        setTitle(e.target.value)\r\n    }\r\n\r\n    const priceInput = (e) => {\r\n        setPrice(parseInt(e.target.value))\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <label>Name:\r\n                <span> <input\r\n                    className=\"add_item_inputs\"\r\n                    type=\"text\"\r\n                    value={title}\r\n                    onChange={titleInput}\r\n                /></span>\r\n            </label>\r\n\r\n\r\n            <label> Price:\r\n                <span> <input\r\n                    className=\"add_item_inputs\"\r\n                    type=\"text\"\r\n                    value={price}\r\n                    onChange={priceInput}\r\n                /></span>\r\n            </label>\r\n\r\n\r\n            <input className=\"add_new_prod_btn\" type=\"submit\" value=\"Add Item\" />\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default AddNewItem\r\n","import React from \"react\";\nimport { useState } from \"react\";\nimport './App.css';\nimport Items from \"./components/Items\";\nimport CartItems from \"./components/CartItems\";\nimport AddNewItem from \"./components/AddNewItem\";\n\nfunction App() {\n\n  const [products, setProducts] = useState(\n    [\n      {\n        title: 'Product 1',\n        id: 1,\n        price: 10,\n      },\n      {\n        title: 'Product 2',\n        id: 2,\n        price: 20,\n      },\n      {\n        title: 'Product 3',\n        id: 3,\n        price: 30,\n      }\n    ]\n  )\n\n  const [cartProducts, setCartProducts] = useState([])\n\n  const [showAddProduct, setShowAddProduct] = useState(false)\n\n\n  // This will add a new object in the items object.\n\n  const addProduct = (product) => {\n    let id = products.length + 2\n    const newProduct = { id, ...product }\n    setProducts([...products, newProduct])\n  }\n\n  const onAdd = (product) => {\n    const exist = cartProducts.find(x => x.id === product.id)\n    if (exist) {\n      setCartProducts(cartProducts.map(x => x.id === product.id ? { ...exist, quantity: exist.quantity + 1 } : x))\n    } else {\n      setCartProducts([...cartProducts, { ...product, quantity: 1 }])\n    }\n  }\n\n  const onRemove = (product) => {\n    const exist = cartProducts.find(x => x.id === product.id)\n    if (exist.quantity === 1) {\n      setCartProducts(cartProducts.filter(x => x.id !== product.id))\n    } else {\n      setCartProducts(cartProducts.map(x => x.id === product.id ? { ...exist, quantity: exist.quantity - 1 } : x))\n    }\n  }\n\n  const clearCartItems = () => {\n    setCartProducts([])\n  }\n\n  const toggleAddProduct = () => {\n    setShowAddProduct(!showAddProduct)\n  }\n\n\n  return (\n    <div className=\"container\">\n      <Items\n        products={products}\n        onAdd={onAdd}\n        countCartProducts={cartProducts.length}\n      />\n      <br />\n\n      <div className=\"showHideBtn\">\n        <button type=\"button \" onClick={toggleAddProduct}>{showAddProduct ? 'Hide' : 'Show'}</button>\n      </div>\n      <br />\n      {showAddProduct && <AddNewItem addProduct={addProduct} />}\n\n      < CartItems\n        cartProducts={cartProducts}\n        onAdd={onAdd}\n        onRemove={onRemove}\n        clearCartItems={clearCartItems}\n      />\n      \n      <footer>&copy;GABRIEL</footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}